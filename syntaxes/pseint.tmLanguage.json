{
    "name": "PSeInt",
    "scopeName": "source.pseint",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#identifiers"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.pseint"
                },
                {
                    "begin": "//",
                    "end": "$",
                    "name": "comment.line.pseint"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "begin": "\"",
                    "end": "\"",
                    "name": "string.quoted.double.pseint",
                    "patterns": [
                        {
                            "match": "\\\\[\"nrt\\\\]",
                            "name": "constant.character.escape.pseint"
                        }
                    ]
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "match": "\\b(Algoritmo|FinAlgoritmo|Definir|Escribir|Imprimir|Leer|Repetir|Asignar|Si|Entonces|SiNo|FinSi|Segun|Hacer|Fin|Mientras|mientras|FinMientras|Hasta|Que|Para|Con|Como|Paso|Funcion|MOD|Y|O|NO|abs|trunc|redon|raiz|sen|cos|tan|asen|acos|atan|ln|exp|azar|Longitud|SubCadena|Concatenar|ConvertirANumero|ConvertirATexto|Mayusculas|Minusculas|PI|Euler|Numero|Numerico|Real|Entero|Logico|Caracter|Texto|Cadena)\\b",
                    "name": "keyword.control.pseint"
                }
            ]
        },        
        "operators": {
            "patterns": [
                {
                    "match": "\\+|-|\\*|/|%|<|>|=|<=|>=|<>|<-",
                    "name": "keyword.operator.pseint"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "match": "\\b[0-9]+\\b",
                    "name": "constant.numeric.pseint"
                }
            ]
        },
        "identifiers": {
            "patterns": [
                {
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
                    "name": "identifier.pseint"
                }
            ]
        }
    }
}
